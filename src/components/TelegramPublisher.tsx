import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Switch } from '@/components/ui/switch';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import type { PropertyObject } from '@/types/investment';
import { formatPropertyForTelegram, buildUtmUrl } from '@/utils/investmentStrategies';

interface TelegramPublisherProps {
  property: PropertyObject;
  brokerId: string;
  onClose: () => void;
}

const TelegramPublisher = ({ property, brokerId, onClose }: TelegramPublisherProps) => {
  const [message, setMessage] = useState(formatPropertyForTelegram(property));
  const [includeUtm, setIncludeUtm] = useState(true);
  const [customText, setCustomText] = useState('');
  const [channels] = useState([
    { id: '1', name: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –ú–æ—Å–∫–≤—ã', subscribers: 15420, connected: true },
    { id: '2', name: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', subscribers: 8900, connected: true },
    { id: '3', name: '–ú–æ—è –≥—Ä—É–ø–ø–∞', subscribers: 350, connected: false }
  ]);
  const [selectedChannels, setSelectedChannels] = useState<string[]>(['1']);
  
  const propertyUrl = `${window.location.origin}/property/${property.id}`;
  const utmUrl = includeUtm 
    ? buildUtmUrl(propertyUrl, 'telegram', 'social', 'property_share', brokerId)
    : propertyUrl;

  const toggleChannel = (channelId: string) => {
    setSelectedChannels(prev => 
      prev.includes(channelId) 
        ? prev.filter(id => id !== channelId)
        : [...prev, channelId]
    );
  };

  const handlePublish = () => {
    console.log('Publishing to channels:', selectedChannels);
    console.log('Message:', message);
    console.log('URL:', utmUrl);
    onClose();
  };

  const copyMessage = () => {
    const fullMessage = `${message}\n\nüîó ${utmUrl}${customText ? `\n\n${customText}` : ''}`;
    navigator.clipboard.writeText(fullMessage);
  };

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-2xl font-bold mb-2">–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram</h2>
        <p className="text-muted-foreground">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –æ–±—ä–µ–∫—Ç–æ–º –≤ —Å–≤–æ–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö</p>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è</CardTitle>
          <CardDescription>–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div className="space-y-2">
              <Label>–¢–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è</Label>
              <Textarea
                value={message}
                onChange={(e) => setMessage(e.target.value)}
                rows={15}
                className="font-mono text-sm"
              />
            </div>

            <div className="space-y-2">
              <Label>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</Label>
              <Textarea
                value={customText}
                onChange={(e) => setCustomText(e.target.value)}
                placeholder="–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é..."
                rows={3}
              />
            </div>

            <div className="flex items-center justify-between border rounded-lg p-3">
              <div>
                <p className="font-semibold text-sm">–î–æ–±–∞–≤–∏—Ç—å UTM-–º–µ—Ç–∫–∏</p>
                <p className="text-xs text-muted-foreground">
                  –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏–∑ Telegram
                </p>
              </div>
              <Switch
                checked={includeUtm}
                onCheckedChange={setIncludeUtm}
              />
            </div>

            <div className="space-y-2">
              <Label>–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç</Label>
              <div className="flex items-center gap-2">
                <Input
                  value={utmUrl}
                  readOnly
                  className="font-mono text-xs"
                />
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => navigator.clipboard.writeText(utmUrl)}
                >
                  <Icon name="Copy" size={16} />
                </Button>
              </div>
            </div>

            <Button onClick={copyMessage} variant="outline" className="w-full gap-2">
              <Icon name="Copy" size={18} />
              –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            </Button>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª—ã</CardTitle>
          <CardDescription>–ö—É–¥–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {channels.map(channel => (
              <div
                key={channel.id}
                className={`border rounded-lg p-4 cursor-pointer transition-all ${
                  selectedChannels.includes(channel.id)
                    ? 'border-primary bg-primary/5'
                    : 'hover:border-gray-400'
                } ${!channel.connected ? 'opacity-50' : ''}`}
                onClick={() => channel.connected && toggleChannel(channel.id)}
              >
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <div className={`w-5 h-5 rounded border-2 flex items-center justify-center ${
                      selectedChannels.includes(channel.id)
                        ? 'border-primary bg-primary'
                        : 'border-gray-300'
                    }`}>
                      {selectedChannels.includes(channel.id) && (
                        <Icon name="Check" size={14} className="text-white" />
                      )}
                    </div>
                    <div>
                      <p className="font-semibold">{channel.name}</p>
                      <p className="text-sm text-muted-foreground">
                        {channel.subscribers.toLocaleString()} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
                      </p>
                    </div>
                  </div>
                  {!channel.connected && (
                    <Badge variant="secondary">–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</Badge>
                  )}
                </div>
              </div>
            ))}
          </div>

          <Button variant="outline" className="w-full mt-4 gap-2">
            <Icon name="Plus" size={18} />
            –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
          </Button>
        </CardContent>
      </Card>

      <div className="flex gap-3">
        <Button
          onClick={handlePublish}
          disabled={selectedChannels.length === 0}
          className="flex-1 gap-2"
        >
          <Icon name="Send" size={18} />
          –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ {selectedChannels.length} {selectedChannels.length === 1 ? '–∫–∞–Ω–∞–ª–µ' : '–∫–∞–Ω–∞–ª–∞—Ö'}
        </Button>
        <Button variant="outline" onClick={onClose}>
          –û—Ç–º–µ–Ω–∞
        </Button>
      </div>

      <Card className="bg-blue-50 border-blue-200">
        <CardContent className="pt-6">
          <div className="flex gap-3">
            <Icon name="Info" size={20} className="text-blue-600 flex-shrink-0 mt-0.5" />
            <div className="text-sm text-blue-900">
              <p className="font-semibold mb-1">–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Telegram –∫–∞–Ω–∞–ª?</p>
              <ol className="list-decimal ml-4 space-y-1">
                <li>–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ @YourBrokerBot –≤ –∞–¥–º–∏–Ω—ã –∫–∞–Ω–∞–ª–∞</li>
                <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /connect –≤ –∫–∞–Ω–∞–ª–µ</li>
                <li>–ö–∞–Ω–∞–ª –ø–æ—è–≤–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π</li>
              </ol>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default TelegramPublisher;
